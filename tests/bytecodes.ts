import { utils } from 'ethers';
import type { HexString } from '../src/interfaces';
import { storeSignature } from './test-utils';
import { toBytes32 } from '../src/bytes';

export const HyVM = {
    BYTECODE: '',
    KNOWN_SEQUENCES: [{
        name: 'CONTINUE',
        code: new Uint8Array([
            0x60, 0, // push1 0
            0x51, // mload
            0x80, // dup1
            0x35, // calldataload
            0x60, 0xf8, // push1 F8
            0x1c, // shr
            0x90, // swap1
            0x60, 1, // push1 1
            0x01, // add
            0x60, 0, // push1 0
            0x52, // mstore
            0x60, 2, // push1 2
            0x02, // mul
            0x60, 0x20, //push1 0x20
            0x01, // add
            0x51, // mload
            0x60, 0xf0, //push1 0xf0
            0x1c, // shr
            0x56, // jump

        ])
    }, {
        name: 'FIX_MEMOFFSET',
        code: new Uint8Array([
            0x61, 0x03, 0x40, // PUSH2 0x0340
            0x01, // add
        ]),
    }, {
        name: 'GOTO_AND_ADVANCE',
        code: new Uint8Array([
            0x80, // dup1,
            0x35, // calldataload
            0x60, 0xf8, // push1 F8
            0x1c, // shr
            0x90, // swap1
            0x60, 1, // push1 1
            0x01, // add
            0x60, 0, // push1 0
            0x52, // mstore
        ]),
    }, {
        name: 'PICK_DATA',
        code: new Uint8Array([
            0x60, 0, // push1 0
            0x51, // mload
            0x80, // dup1
            0x35, // calldataload
            0x82, // dup3

            0x60, 0x20, // push1 x20
            0x03, // sub
            0x60, 0x8, // push1 8
            0x02, // mul

            0x1c, // shr

            0x91, // swap2
            0x01, // add

            0x60, 0, // push1 0
            0x52, // mstore

            // 0x80, // dup1
            // 0x60, 0x20, // push1 x20
            // 0x03, // sub
            // 0x60, 0, // push1 0
            // 0x51, // mload
            // 0x35, // calldataload
            // 0x90, // swap1
            // 0x60, 0x8, // push1 8
            // 0x02, // mul
            // 0x1c, // shr
            // 0x90, // swap1

            // // increment_exec_ptr_n
            // 0x60, 0, // push1 0
            // 0x51, // mload
            // 0x01, // add
            // 0x60, 0, // push1 0
            // 0x52, // mstore
        ]),
     }, {
            name: 'CONSOLE_LOG',
            code: new Uint8Array([
            0x7f, // PUSH32 0x41304fac00000000000000000000000000000000000000000000000000000000
            ...[0x41, 0x30, 0x4f, 0xac, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
            0x61, 0x2, 0x20,  // PUSH2 0x220
            0x52, // mstore

            0x60, 0x20, // push1 0x20
            0x61, 0x2, 0x20,  // PUSH2 0x220
            0x60, 0x4,  // PUSH1 4
            0x01, // add
            0x52, // mstore

            0x61, 0x2, 0x20,  // PUSH2 0x220
            0x60, 0x20,  // PUSH2 x20
            0x01, // add
            0x60, 0x4,  // PUSH1 4
            0x01, // add
            0x52, // mstore


            0x61, 0x2, 0x20,  // PUSH2 0x220
            0x60, 0x40,  // PUSH2 x40
            0x01, // add
            0x60, 0x4,  // PUSH1 4
            0x01, // add
            0x52, // mstore

            0x60, 0,  // PUSH1 0
            0x60, 0,  // PUSH1 0
            0x61, 0x1, 0,  // PUSH2 0x0100
            0x61, 0x2, 0x20,  // PUSH2 0x220
            0x6a,
            ...[0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67], // PUSH11 0x636f6e736f6c652e6c6f67
            0x5a, // gas
            0xfa, // staticcall
            0x50, // pop
        ])
    }],
};

export const DOUBLE_SWAP = {
    NATIVE_ADDRESS: '0x185a4dc360ce69bdccee33b3784b0282f7961aea' as HexString,
    NATIVE_BYTECODE: '608060405234801561001057600080fd5b50610742806100206000396000f3fe6080604052600436106100225760003560e01c806364c2c7851461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b50610043610045565b005b6040516370a0823160e01b815230600482015260009073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a0823190602401602060405180830381865afa158015610097573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bb9190610506565b90506305f5e1008110156101045760405162461bcd60e51b815260206004820152600c60248201526b139bdd08195b9bdd59da080960a21b604482015260640160405180910390fd5b60405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152600019602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489063095ea7b3906044016020604051808303816000875af1158015610171573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610195919061051f565b506040805160028082526060820183524792600092919060208301908036833701905050905073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48816000815181106101e3576101e361055e565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28160018151811061022b5761022b61055e565b6001600160a01b03909216602092830291909101909101526040516318cbafe560e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d906318cbafe590610287906305f5e100906000908690309042906004016105b8565b6000604051808303816000875af11580156102a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ce91908101906105f4565b5060006102db83476106b2565b6040516370a0823160e01b8152306004820152909150600090736b175474e89094c44da98b954eedeac495271d0f906370a0823190602401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610506565b905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28360008151811061037e5761037e61055e565b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f836001815181106103c6576103c661055e565b6001600160a01b0390921660209283029190910190910152604051637ff36ab560e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d90637ff36ab590849061041e906000908890309042906004016106d7565b60006040518083038185885af115801561043c573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261046591908101906105f4565b506040516370a0823160e01b81523060048201526000908290736b175474e89094c44da98b954eedeac495271d0f906370a0823190602401602060405180830381865afa1580156104ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de9190610506565b6104e891906106b2565b90506622d10c4ecc80008110156104fe57600080fd5b505050505050565b60006020828403121561051857600080fd5b5051919050565b60006020828403121561053157600080fd5b8151801515811461054157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156105ad5781516001600160a01b031687529582019590820190600101610588565b509495945050505050565b85815284602082015260a0604082015260006105d760a0830186610574565b6001600160a01b0394909416606083015250608001529392505050565b6000602080838503121561060757600080fd5b825167ffffffffffffffff8082111561061f57600080fd5b818501915085601f83011261063357600080fd5b81518181111561064557610645610548565b8060051b604051601f19603f8301168101818110858211171561066a5761066a610548565b60405291825284820192508381018501918883111561068857600080fd5b938501935b828510156106a65784518452938501939285019261068d565b98975050505050505050565b6000828210156106d257634e487b7160e01b600052601160045260246000fd5b500390565b8481526080602082015260006106f06080830186610574565b6001600160a01b0394909416604083015250606001529291505056fea26469706673582212200c3371b61f04e0916b8ed6f53c39fb661a5aca1845a32355066990cd3d6e985e64736f6c634300080f0033',
    HyVM_BYTECODE: '608060405234801561001057600080fd5b506040516370a0823160e01b815230600482015260009073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48906370a0823190602401602060405180830381865afa158015610063573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061008791906104d5565b90506305f5e1008110156100d05760405162461bcd60e51b815260206004820152600c60248201526b139bdd08195b9bdd59da080960a21b604482015260640160405180910390fd5b60405163095ea7b360e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d6004820152600019602482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb489063095ea7b3906044016020604051808303816000875af115801561013d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016191906104ee565b506040805160028082526060820183524792600092919060208301908036833701905050905073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48816000815181106101af576101af61052d565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2816001815181106101f7576101f761052d565b6001600160a01b03909216602092830291909101909101526040516318cbafe560e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d906318cbafe590610253906305f5e10090600090869030904290600401610587565b6000604051808303816000875af1158015610272573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261029a91908101906105c3565b5060006102a78347610680565b6040516370a0823160e01b8152306004820152909150600090736b175474e89094c44da98b954eedeac495271d0f906370a0823190602401602060405180830381865afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032091906104d5565b905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc28360008151811061034a5761034a61052d565b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f836001815181106103925761039261052d565b6001600160a01b0390921660209283029190910190910152604051637ff36ab560e01b8152737a250d5630b4cf539739df2c5dacb4c659f2488d90637ff36ab59084906103ea906000908890309042906004016106a5565b60006040518083038185885af1158015610408573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261043191908101906105c3565b506040516370a0823160e01b81523060048201526000908290736b175474e89094c44da98b954eedeac495271d0f906370a0823190602401602060405180830381865afa158015610486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104aa91906104d5565b6104b49190610680565b90506622d10c4ecc80008110156104ca57600080fd5b5050505050506106da565b6000602082840312156104e757600080fd5b5051919050565b60006020828403121561050057600080fd5b8151801515811461051057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b8381101561057c5781516001600160a01b031687529582019590820190600101610557565b509495945050505050565b85815284602082015260a0604082015260006105a660a0830186610543565b6001600160a01b0394909416606083015250608001529392505050565b600060208083850312156105d657600080fd5b82516001600160401b03808211156105ed57600080fd5b818501915085601f83011261060157600080fd5b81518181111561061357610613610517565b8060051b604051601f19603f8301168101818110858211171561063857610638610517565b60405291825284820192508381018501918883111561065657600080fd5b938501935b828510156106745784518452938501939285019261065b565b98975050505050505050565b6000828210156106a057634e487b7160e01b600052601160045260246000fd5b500390565b8481526080602082015260006106be6080830186610543565b6001600160a01b03949094166040830152506060015292915050565b603f806106e86000396000f3fe6080604052600080fdfea264697066735822122063738389f9bb99c69e3e116c8689083565cf1b602a78b64e6d2784f72acc9ea364736f6c634300080f0033',
    HUFF_BYTECODE: '608e8060093d393df36370a0823160005230600452602060006024600073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb485afa156000516305f5e10010176100885763095ea7b3600052737a250d5630b4cf539739df2c5dacb4c659f2488d6004526305f5e1006024526020600060446000600073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb485af115610088575b60006000fd',
};

// solc tests/contracts/Reentrant.sol  --bin
//  ... but I removed the deployment header (see: solc tests/contracts/Reentrant.sol  --asm)
/// (header was 608060405234801561001057600080fd5b506102a4806100206000396000f3fe)
export const REENTRANT = {
    BYTECODE: '60806040526004361061002d5760003560e01c80633ccfd60b14610039578063d0e30db01461005057610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e610067565b005b34801561005c57600080fd5b50610065610109565b005b600047905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d6130396040518263ffffffff1660e01b81526004016100bb91906101f0565b600060405180830381600087803b1580156100d557600080fd5b505af11580156100e9573d6000803e3d6000fd5b5050505061303981476100fc919061023a565b1461010657600080fd5b50565b600047905073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db06130396040518263ffffffff1660e01b81526004016000604051808303818588803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b50505050506130394782610194919061023a565b1461019e57600080fd5b50565b6000819050919050565b6000819050919050565b6000819050919050565b60006101da6101d56101d0846101a1565b6101b5565b6101ab565b9050919050565b6101ea816101bf565b82525050565b600060208201905061020560008301846101e1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610245826101ab565b9150610250836101ab565b9250828210156102635761026261020b565b5b82820390509291505056fea26469706673582212201017d30225eb5345fa84eed0bbadad2e58149626bd6b404597c1e5687afdbb4964736f6c634300080f0033',

    CALL: (deployedAddress: bigint, op: 'deposit' | 'withdraw') => new Uint8Array([
        // store signature
        ...storeSignature(0, REENTRANT[`${op}()`]),

        // store arg value
        0x60, 0x42, // push1 0x42 (value)
        0x60, 0x04, // push1 0 (offset)
        0x52, // mstore

        // perform call
        0x60, 0x0, // push1 0 (retSize)
        0x60, 0x0, // push1 0 (retOffset)
        0x60, 0x24, // push1 0x24 (argSize)
        0x60, 0x00, // push1 0x00 (argOffset)
        0x60, 0x00, // push1 0x00 (value)
        0x7f, ...toBytes32(deployedAddress), // push32 contract (contract)
        0x7f, ...Array(32).fill(0xff), // push32 0xfff... (gas)
        0xf1, // call
    ]),
        //  solc tests/contracts/Reentrant.sol  --hashes
    'deposit()': 'd0e30db0',
    'withdraw()': '3ccfd60b',
}


// solc tests/contracts/Dummy.sol  --bin
//  ... but I removed the deployment header (see: solc tests/contracts/Dummy.sol  --asm)
///    (header was 608060405234801561001057600080fd5b50610150806100206000396000f3fe)
export const DUMMY = {
    BYTECODE: '608060405234801561001057600080fd5b50610150806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634c0811381461003b57806357de26a414610057575b600080fd5b610055600480360381019061005091906100c3565b610075565b005b61005f61007f565b60405161006c91906100ff565b60405180910390f35b8060008190555050565b60008054905090565b600080fd5b6000819050919050565b6100a08161008d565b81146100ab57600080fd5b50565b6000813590506100bd81610097565b92915050565b6000602082840312156100d9576100d8610088565b5b60006100e7848285016100ae565b91505092915050565b6100f98161008d565b82525050565b600060208201905061011460008301846100f0565b9291505056fea264697066735822122005423a9444d314e0e7b2cd4bfd07c44339d8d9f826f414e6b15941adf8e719bf64736f6c634300080f0033',

    CALL_SETTER: (deployedDummy: bigint) => new Uint8Array([
        // store signature
        ...storeSignature(0, DUMMY['assign(uint256)']),

        // store arg value
        0x60, 0x42, // push1 0x42 (value)
        0x60, 0x04, // push1 0 (offset)
        0x52, // mstore

        // perform call
        0x60, 0x0, // push1 0 (retSize)
        0x60, 0x0, // push1 0 (retOffset)
        0x60, 0x24, // push1 0x24 (argSize)
        0x60, 0x00, // push1 0x00 (argOffset)
        0x60, 0x00, // push1 0x00 (value)
        0x7f, ...toBytes32(deployedDummy), // push32 contract (contract)
        0x7f, ...Array(32).fill(0xff), // push32 0xfff... (gas)
        0xf1, // call
    ]),

    CALL_GETTER: (deployedDummy: bigint) => new Uint8Array([
        // store signature
        ...storeSignature(0, DUMMY['read()']),

        // perform call
        0x60, 0x0, // push1 0 (retSize)
        0x60, 0x0, // push1 0 (retOffset)
        0x60, 0x04, // push1 0x04 (argSize)
        0x60, 0x00, // push1 0x00 (argOffset)
        0x60, 0x00, // push1 0x00 (value)
        0x7f, ...toBytes32(deployedDummy), // push32 contract (contract)
        0x7f, ...Array(32).fill(0xff), // push32 0xfff... (gas)
        0xf1, // call

        // copy result to array
        0x3d, // RETURNDATASIZE
        0x80, // dup1
        0x60, 0, // push1 0
        0x60, 0xff, // push1 0xff
        0x3e, // returndatacopy

        // return result
        0x60, 0xff, // push1 0xff
        0xf3
    ]),
        //  solc tests/contracts/Dummy.sol  --hashes
    'assign(uint256)': '4c081138',
    'read()': '57de26a4',
};


export const HyVM_CALLER = {
    ABI: new utils.Interface([{ "inputs": [{ "internalType": "address", "name": "hyvm", "type": "address" }, { "internalType": "bytes", "name": "bytecode", "type": "bytes" }], "name": "callNvm", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "stateMutability": "payable", "type": "receive" }]),
    BYTECODE: '608060405234801561001057600080fd5b506101d3806100206000396000f3fe6080604052600436106100225760003560e01c8063ca60cd8d1461002e57600080fd5b3661002957005b600080fd5b34801561003a57600080fd5b5061004e6100493660046100fc565b610050565b005b6000836001600160a01b0316838360405161006c92919061018d565b600060405180830381855af49150503d80600081146100a7576040519150601f19603f3d011682016040523d82523d6000602084013e6100ac565b606091505b50509050806100f65760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f2063616c6c204e564d60701b604482015260640160405180910390fd5b50505050565b60008060006040848603121561011157600080fd5b83356001600160a01b038116811461012857600080fd5b9250602084013567ffffffffffffffff8082111561014557600080fd5b818601915086601f83011261015957600080fd5b81358181111561016857600080fd5b87602082850101111561017a57600080fd5b6020830194508093505050509250925092565b818382376000910190815291905056fea26469706673582212207d7c6de913231d67d52591fd1455e3193631f4595f9c6e2f66f9750619575ad564736f6c634300080f0033',
};